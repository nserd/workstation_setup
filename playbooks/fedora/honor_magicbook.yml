---
- name: Fedora Workstation Honor Magicbook
  hosts: localhost
  connection: local
  vars:
    rclone_directory: ~/gdrive
    hyprland_monitors_manual_enabled: true
    hyprland_monitors_manual: ["monitor=,preferred,auto,1.733333"]
    hyprland_autostart: ["clipman store --no-persists"]

    font_family_monospace: JetBrainsMono Nerd Font

    kitty_font_family: "{{ font_family_monospace }}"
    vscode_font_family: "{{ font_family_monospace }}"
    hyprland_hyprlock_font_family: "{{ font_family_monospace }}"
    waybar_font_family: "{{ font_family_monospace }}"
  tasks:
    - name: Check GNOME
      ansible.builtin.fail:
        msg: GNOME environment detected. You need to switch to TTY to continue
      when: lookup('ansible.builtin.env', 'XDG_CURRENT_DESKTOP') == 'GNOME'

    - name: Set system to boot into multi-user target (text mode)
      ansible.builtin.systemd:
        name: multi-user.target
        enabled: true
      become: true

    - name: Disable GDM
      ansible.builtin.systemd:
        name: gdm
        enabled: false
      become: true

    - name: Enable rpmfusion
      ansible.builtin.dnf:
        name:
          - "https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-{{ ansible_distribution_version }}.noarch.rpm"
          - "https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-{{ ansible_distribution_version }}.noarch.rpm"
        state: present
        disable_gpg_check: true
      become: true

    - name: Set ELECTRON_OZONE_PLATFORM_HINT variable
      ansible.builtin.copy:
        content: export ELECTRON_OZONE_PLATFORM_HINT=auto
        dest: ~/.profile
        mode: u=rw,g=r,o=r

    - name: Setup user directories
      vars:
        user_directories:
          - { name: XDG_DESKTOP_DIR, value: desktop }
          - { name: XDG_DOWNLOAD_DIR, value: downloads }
          - { name: XDG_TEMPLATES_DIR, value: templates }
          - { name: XDG_DOCUMENTS_DIR, value: notes }
          - { name: XDG_PICTURES_DIR, value: pictures }
          - { name: XDG_PUBLICSHARE_DIR, value: share }
          - { name: XDG_MUSIC_DIR, value: music }
          - { name: XDG_VIDEOS_DIR, value: videos }
      notify: User directories update

      block:
        - name: Ensure directories exist
          ansible.builtin.file:
            path: "~/{{ item.value }}"
            state: directory
            mode: u=rwx,g=rx,o=rx
          loop: "{{ user_directories }}"
        - name: Add user directories config
          ansible.builtin.copy:
            content: |
              {% for dir in user_directories %}
              {{ dir.name }}="$HOME/{{ dir.value }}"
              {% endfor %}
            dest: ~/.config/user-dirs.dirs
            mode: u=rw,g=r,o=r
        - name: Remove old directories
          ansible.builtin.file:
            path: "~/{{ item }}"
            state: absent
          loop:
            - Desktop
            - Downloads
            - Templates
            - Documents
            - Pictures
            - Music
            - Videos
            - Public

    - name: Include roles
      ansible.builtin.include_role:
        name: "nserd.workstation_collection.{{ role }}"
      loop:
        - common_packages
        - bash
        - font
        - greetd
        - kitty
        - hyprland
        - rclone
        - rofi
        - waybar
        - vscode
      loop_control:
        loop_var: role

  handlers:
    - name: User directories update
      ansible.builtin.command: xdg-user-dirs-update
      register: xdg_update
      changed_when: xdg_update.rc == 0 and xdg_update.stdout | length > 0
